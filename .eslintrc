{
  "extends": [ "taro", "plugin:@typescript-eslint/recommended" ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    // 强制在花括号内使用一致的换行符
    "object-curly-newline": [ "off", {
      // 属性数量超过2时强制使用换行符
      "minProperties": 2
    } ],
    // 强制将对象的属性放在不同的行上
    "object-property-newline": [ "off", {
      // 禁止所有的属性都放在同一行
      "allowAllPropertiesOnSameLine": true
    } ],
    // 强制在花括号中使用一致的空格 要求花括号中总是有空格
    "object-curly-spacing": [ "error", "always" ],
    // 强制在点号之后换行 object-跟随对象 property-跟随属性
    "dot-location": [ "error", "property" ],
    // 强制所有控制语句使用一致的括号风格
    "curly": "error",
    // 限制圈复杂度 阈值3 如if else if else语句最多嵌套三层 TODO: 需要放开
    "complexity": [ "off", 16 ],
    "react/jsx-indent-props": 0, // 不验证jsx缩进
    // 不允许未使用的变量
    "no-unused-vars": [ "error", {
      // 忽略Taro
      "varsIgnorePattern": "Taro"
    } ],
    // 不允许字符串ref
    "react/no-string-ref": 0,
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".tsx"
        ]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "Taro"
      }
    ],
    "@typescript-eslint/member-delimiter-style": [ "error", {
      "multiline": {
        "delimiter": "none",
        "requireLast": false
      },
      "singleline": {
        "delimiter": "semi",
        "requireLast": false
      }
    } ],
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/no-empty-function": [ "warn" ],
    "import/no-commonjs": 0,
    "@typescript-eslint/no-var-requires": 0,
    "import/first": 0,
    // 禁止any声明
    "@typescript-eslint/no-explicit-any": 0,
    // interface名必须以大写字母I开头
    "@typescript-eslint/interface-name-prefix": 0,
    // import之后必须隔行
    "import/newline-after-import": 0,
    // 变量必须使用驼峰命名
    "@typescript-eslint/camelcase": 0,
    // 禁止将this赋值给其他变量
    "@typescript-eslint/no-this-alias": 0
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "useJSXTextNode": true,
    "project": "./tsconfig.json"
  },
  // 全局变量配置 "readonly"-只读, "writable"-可写, "off"-不允许
  "globals": {
    "APP_CONF": "readonly"
  }
}
